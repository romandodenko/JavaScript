"use strict"

window.onload = function () {

  const base = "../../json/base.json";

function blockBody() {
  document.body.style.overflow = 'hidden';
}

document.addEventListener("click", function (e) {

  const elementInteractive = e.target;

  const content = document.querySelector(".hotels__list");

  if (elementInteractive.closest(".plugin__button")) { // –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É, –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–æ–∏—Å–∫ –æ—Ç–µ–ª–µ–π –ø–æ –¥–∞–Ω–Ω—ã–º –∏–∑ –∏–Ω–ø—É—Ç–æ–≤

    content.querySelectorAll(".hotels__item").forEach(function (e) {
      e.remove();
    })

    fetch(base) // –≤—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ fetch
      .then((resp) => resp.json())
      .then(function (data) {

        let base = data;

        let thisPlugin = elementInteractive.closest(".plugin");

        let arrivalDate = thisPlugin.querySelector('.arrival-date').value;

        let dateOfDeparture = thisPlugin.querySelector('.date-of-departure').value;

        let numberOfGuests = thisPlugin.querySelector('.number-of-guests').value;

        const hotels = document.querySelector(".hotels");

        hotels.style.display = 'block';

        base.forEach(function (base) {

          if (base.arrivalDate === arrivalDate && base.dateOfDeparture === dateOfDeparture && base.numberOfGuests === numberOfGuests) {

            let template = `
              <li class="hotels__item item-search">
                <div class="hotels__image">
                  <img src="${base.image}" loading="lazy" width="30" height="30" alt="Image">
                </div>
                <h3 class="hotels__name">
                  ${base.name}
                </h3>
                <p class="hotels__price">
                  ${base.price}
                </p>
                <button class="hotels__button">
                  –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å
                </button>
              </li> 
            `

            content.insertAdjacentHTML("beforeend", template);

          } 
          
          if (!content.querySelector(".item-search")) {

            if(!content.querySelector(".error-item")) {
              let template = `
              <li class="hotels__item error-item">
                <span class="hotels__icon">X</span>  
                <p class="hotels__error">
                  –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
                </p>
              </li> 
            `
            content.insertAdjacentHTML("beforeend", template);
            }

          } else {

            if(content.querySelector(".error-item")) {
              content.querySelector(".error-item").remove()
            }
          }

        })
      })
      .catch(function (error) {
        console.log(error);
      });

  }

  if (elementInteractive.closest(".hotels__button")) {

    let form = document.querySelector(".form");

    let formInputNameHotel = form.querySelector(".name-hotel");

    let hotelsItem = elementInteractive.closest(".hotels__item");

    let hotelsNameHotel = hotelsItem.querySelector(".hotels__name");

    let hotelsNameHotelValue = hotelsNameHotel.innerHTML;

    formInputNameHotel.value = hotelsNameHotelValue;

    document.querySelector(".wrapper-form").classList.add("active");

    setTimeout(500, blockBody);
  }

  if (elementInteractive.closest(".wrapper-form__close")) {

    document.querySelector(".wrapper-form").classList.remove("active");

    document.querySelector(".wrapper-form__item-form").classList.remove("disabled")

    document.querySelector(".okay").classList.remove("active");

    document.body.style.overflow = '';

  }

  if (elementInteractive.closest(".wrapper-form__exit")) {

    document.querySelector(".wrapper-form").classList.remove("active");

    document.querySelector(".wrapper-form__item-form").classList.remove("disabled")

    document.querySelector(".okay").classList.remove("active");

    document.body.style.overflow = '';

  }

})

  // –ö–∞–ª–µ–Ω–¥–∞—Ä—å

if(document.body.clientWidth >= 1024) {
  new AirDatepicker('#item1', {});
  
  new AirDatepicker('#item2', {});
}
if(document.body.clientWidth <= 1024) {
  new AirDatepicker('#item1', {
    isMobile: true,
    autoClose: true,
  });
  
  new AirDatepicker('#item2', {
    isMobile: true,
    autoClose: true,
  });
}


// new AirDatepicker('#item1', {

// inline:true, // –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∫–∞–ª–µ–Ω–¥–∞—Ä—å –±—ã–ª –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –≤–∏–¥–∏–º—ã–π, –Ω—É–∂–Ω–æ –µ–≥–æ –ø—Ä–æ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –Ω–µ –Ω–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–º –ø–æ–ª–µ(–∏–Ω–ø—É—Ç), –∏–ª–∏ –ø–µ—Ä–µ–¥–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä inline:true

// view: 'months', // –î–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤—ã–±–æ—Ä–∞ —Ç–æ–ª—å–∫–æ –º–µ—Å—è—Ü–∞ –±–µ–∑ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —á–∏—Å–ª–∞, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–±–∏–Ω–∞—Ü–∏—é –∏–∑ –æ–ø—Ü–∏–π view –∏ minView - —Å –ø–æ–º–æ—â—å—é –ø–µ—Ä–≤–æ–π –º—ã —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∫–∞–ª–µ–Ω–¥–∞—Ä—è, –∞ —Å –ø–æ–º–æ—â—å—é –≤—Ç–æ—Ä–æ–π –∑–∞–¥–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω–æ –≤–æ–∑–º–æ–∂–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ.
// minView: 'months',
// dateFormat: 'MMMM yyyy',

// isMobile: true, // –£ Air Datepicker –µ—Å—Ç—å —Ä–µ–∂–∏–º, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å –∫–∞–∫ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ - –≤ —ç—Ç–æ–º —Ä–µ–∂–∏–º–µ –æ–Ω –ø–æ—è–≤–ª—è–µ—Ç—Å—è –ø–æ —Ü–µ–Ω—Ç—Ä—É —ç–∫—Ä–∞–Ω–∞ –≤ –Ω–µ–º–Ω–æ–≥–æ —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã—Ö —Ä–∞–∑–º–µ—Ä–∞—Ö –¥–ª—è –æ–±–ª–µ–≥—á–µ–Ω–∏—è –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã.
// autoClose: true, // –ó–∞–∫—Ä—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –¥–∞—Ç—ã, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–º–µ—Å—Ç–µ —Å isMobile

// position: 'bottom center', // –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ

// range: true, // –ü–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–±–∏—Ä–∞—Ç—å –¥–≤–µ –¥–∞—Ç—ã
// multipleDatesSeparator: ' - ', // –ó–Ω–∞–∫ –∫–æ—Ç–æ—Ä—ã–π —Ä–∞–∑–¥–µ–ª—è–µ—Ç –¥–∏–∞–ø–∞–∑–æ–Ω –¥–∞—Ç

// timepicker: true, // –ü–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–±—Ä–∞—Ç—å –Ω–µ —Ç–æ–ª—å–∫–æ –¥–∞—Ç—É –Ω–æ –∏ –≤—Ä–µ–º—è

// onRenderCell({ // –ú–æ–∂–Ω–æ –≤—Å—Ç–∞–≤–∏—Ç—å —ç–º–æ–¥–∂–∏ 
//   date,
//   cellType
// }) {
//   let dates = [1, 5, 7, 10, 15, 20, 25], // –î–∞—Ç—ã –≥–¥–µ —Å—Ç–∞–≤—è—Ç—Å—è —ç–º–æ–¥–∂–∏
//     emoji = ['üíï', 'üòÉ', 'üçô', 'üç£', 'üçª', 'üéâ', 'ü•Å'], // –≠–º–æ–¥–∂–∏ 
//     isDay = cellType === 'day',
//     _date = date.getDate(),
//     shouldChangeContent = isDay && dates.includes(_date),
//     randomEmoji = emoji[Math.floor(Math.random() * emoji.length)];

//   return {
//     html: shouldChangeContent ? randomEmoji : undefined,
//     classes: shouldChangeContent ? '-emoji-cell-' : undefined,
//     attrs: {
//       title: shouldChangeContent ? randomEmoji : ''
//     }
//   }
// },

// buttons: ['today', 'clear'] // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å –∫–Ω–æ–ø–∫–∏, —ç—Ç–æ —É–∂–µ –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏. –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å –∏ —Å–≤–æ–∏

// locale: { // –í –¥–∞–Ω–Ω–æ–º –∫–∞–ª–µ–Ω–¥–∞—Ä–µ –º–æ–∂–µ–æ –º–µ–Ω—è—Ç—å –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏—é
//   days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],
//   daysShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
//   daysMin: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
//   months: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
//   monthsShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
//   today: 'Today',
//   clear: 'Clear',
//   dateFormat: 'MM/dd/yyyy',
//   timeFormat: 'hh:mm aa',
//   firstDay: 0
// },

// });

/* <input type="text" class="calendar" name="calendar" id="calendar"> */

  // ------------------------------------------------- –ù–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
const form = document.querySelector(".form");

let formInputTel = form.querySelector("input[type='tel']");

let formMask = new Inputmask("+7 (999) 999-99-99");

formMask.mask(formInputTel);

const validator = new JustValidate('.form', {});

validator
  .addField('#nameUser', [{ // –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–ª–∞—Å—Å—ã –≤–º–µ—Å—Ç–æ –∏–¥
      rule: 'required',
      errorMessage: '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è',
    },
  ])
  .addField('#phoneUser', [{
      rule: 'required',
      errorMessage: '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω',
    },
    {
      rule: 'function',
      validator: function () {
        const phone = formInputTel.inputmask.unmaskedvalue();
        return phone.length === 10;
      },
      errorMessage: '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω',
    },
  ])
  .onSuccess((event) => { // –ï—Å–ª–∏ —Ñ–æ—Ä–º–∞ –ø—Ä–æ—Ö–æ–¥–∏—Ç –≤–∞–ª–∏–¥–∞—Ü–∏—é —Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∫–æ–¥ –Ω–∏–∂–µ
    let formData = new FormData(event.target);

    let xhr = new XMLHttpRequest();

    xhr.onreadystatechange = function () {
      if (xhr.readyState === 4) {
        if (xhr.status === 200) {

          document.querySelector(".wrapper-form__item-form").classList.add("disabled");
          
          document.querySelector(".okay").classList.add("active");
          
        }
      }
    }

    xhr.open('POST', 'mail.php', true);
    xhr.send(formData);

    event.target.reset();
  })

}
// Что есть в данном файле:
//  1) Адаптивное свойство
//  2) Адаптивный шрифт
//  3) Кастомный скролл
//  4) Обвод текста
//  5) Сокрытие текста
//  6) Убрать у инпута с типом num стрелочки
//  7) Убирает округление у инпутов на айфоне
//  8) Таймер с свг
//  9) Таймер цсс
//  10) Рипл
//  11) Блик эффект
//  12) Бесконечно движущийся блок (ticker slider)
//  13) Рейтинг на цсс


$maxWidth: 1920; // обязательно для адаптивного шрифта и адаптивного свойства
$maxWidthContainer: 1320; // обязательно для адаптивного шрифта и адаптивного свойства

// Адаптивное свойство

@mixin adaptive ($property, $startSize, $minSize, $type) {
  $addSize: $startSize - $minSize;

  @if $type==1 {
    // Только если меньше контейнера
    #{$property}: $startSize + px;

    @media (max-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
    }
  }

  @else if $type==2 {
    // Только если больше контейнера 
    #{$property}: $startSize + px;

    @media (min-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
    }
  }

  @else {
    // Всегда
    #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
  }
}

// Как использовать

@include adaptive ("padding", 30, 10, 0); // Свойство, максимальное значение, значение которое станет в итоге, тип

// ===================================================================================================================================================

// Адаптивный шрифт

@mixin adaptiv-font($pcSize, $mobSize) {
  $addSize: $pcSize - $mobSize;
  $addMobSize: $addSize + $addSize * 0.7;

  @media (max-width: 767px) {
    font-size: calc(#{$mobSize + px} + #{$addMobSize} * ((100vw - 320px) / #{$maxWidth}));
  }

  @media (min-width: 767px) {
    font-size: calc(#{$mobSize + px} + #{$addSize} * (100vw / #{$maxWidth}));
  }
}

// Как использовать

@include adaptiv-font($pcSize, $mobSize); // 1 значение - шрифт на пк, 2 значение шрифт на мобильном разрешение. maxwidth разрешение макета

// ===================================================================================================================================================

// Кастомный скролл

/* полоса прокрутки (скроллбар) */
::-webkit-scrollbar {
  width: 24px;
  /* ширина для вертикального скролла */
  height: 8px;
  /* высота для горизонтального скролла */
  background-color: #143861;
}

/* ползунок скроллбара */
::-webkit-scrollbar-thumb {
  background-color: #843465;
  border-radius: 9em;
  box-shadow: inset 1px 1px 10px #f3faf7;
}

::-webkit-scrollbar-thumb:hover {
  background-color: #253861;
}

/* Стрелки */

::-webkit-scrollbar-button:vertical:start:decrement {
  background: linear-gradient(120deg, #02141a 40%, rgba(0, 0, 0, 0) 41%),
    linear-gradient(240deg, #02141a 40%, rgba(0, 0, 0, 0) 41%),
    linear-gradient(0deg, #02141a 30%, rgba(0, 0, 0, 0) 31%);
  background-color: #f6f8f4;
}

::-webkit-scrollbar-button:vertical:end:increment {
  background:
    linear-gradient(300deg, #02141a 40%, rgba(0, 0, 0, 0) 41%),
    linear-gradient(60deg, #02141a 40%, rgba(0, 0, 0, 0) 41%),
    linear-gradient(180deg, #02141a 30%, rgba(0, 0, 0, 0) 31%);
  background-color: #f6f8f4;
}

::-webkit-scrollbar-button:horizontal:start:decrement {
  background:
    linear-gradient(30deg, #02141a 40%, rgba(0, 0, 0, 0) 41%),
    linear-gradient(150deg, #02141a 40%, rgba(0, 0, 0, 0) 41%),
    linear-gradient(270deg, #02141a 30%, rgba(0, 0, 0, 0) 31%);
  background-color: #f6f8f4;
}

::-webkit-scrollbar-button:horizontal:end:increment {
  background:
    linear-gradient(210deg, #02141a 40%, rgba(0, 0, 0, 0) 41%),
    linear-gradient(330deg, #02141a 40%, rgba(0, 0, 0, 0) 41%),
    linear-gradient(90deg, #02141a 30%, rgba(0, 0, 0, 0) 31%);
  background-color: #f6f8f4;
}

// ===================================================================================================================================================

// Обвод текста

.el {
  text-shadow: #000 1px 0 0px, #000 0 1px 0px, #000 -1px 0 0px, #000 0 -1px 0px;
}

// ===================================================================================================================================================

// Сокрытие текста

.el {
  max-width: 500px; // не обязательно
  margin: 0;
  /* Убираем внешний отступ */
  -webkit-line-clamp: 2;
  /* Число отображаемых строк */
  display: -webkit-box;
  /* Включаем флексбоксы */
  -webkit-box-orient: vertical;
  /* Вертикальная ориентация */
  overflow: hidden;
  /* Обрезаем всё за пределами блока */
}

// ===================================================================================================================================================


// Убрать у инпута с типом num стрелочки

input[type="number"]::-webkit-outer-spin-button,
input[type="number"]::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}


input[type="number"] {
  -moz-appearance: textfield;
}

input[type="number"]:hover,
input[type="number"]:focus {
  -moz-appearance: number-input;
}

input[type=number]::-webkit-inner-spin-button,
input[type=number]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

// ===================================================================================================================================================

// Убирает округление у инпутов на айфоне

textarea,
input[type="text"],
input[type="button"],
input[type="submit"] {
  -webkit-appearance: none;
  border-radius: 0;
}

// ===================================================================================================================================================

// Таймер с свг

.hero .hero-button-next .timer {
  // hero-button-next класс кнопки у слайдера
  position: absolute;
  top: -5px;
  left: -5px;
  width: 125%;
  height: 125%;
  opacity: 0;
  visibility: hidden;
}

.hero .timer-active .timer {
  stroke-dasharray: 1000;
  transform: translateX(0);
  opacity: 1;
  visibility: visible;
  animation-name: pag;
  animation-timing-function: linear;
  animation-duration: 160s;
}

.hero .timer-disabled .timer {
  // если при автоплее у слайдера слайдов не остается но таймер перестает работать
  animation-name: none;
}

.hero .timer-disabled .timer circle {
  // если при автоплее у слайдера слайдов не остается но таймер перестает работать
  stroke: transparent;
}

.timer-active .timer circle {
  stroke: var(--white);
}

@-webkit-keyframes pag {
  from {
    stroke-dashoffset: 1000;
  }

  to {
    stroke-dashoffset: 0;
  }
}

@keyframes pag {
  0% {
    stroke-dashoffset: 1000;
  }

  100% {
    stroke-dashoffset: 0;
  }
}

// <svg class="timer" width="24" height="24" viewBox="0 0 24 24"> // таймер
//   <circle cx="4" cy="12" r="10" transform="rotate(-90 8 8)"
//    stroke-width="1px" stroke="#ff862f" fill="transparent"></circle>
// </svg>

// Если нужно сделать чтобы у слайдера был таймер на кнопке то делаем так

// on: {
//   slideNextTransitionStart() {
//     const timer = `<svg class="timer" width="24" height="24" viewBox="0 0 24 24">
//     <circle cx="4" cy="12" r="10" transform="rotate(-90 8 8)"
//     stroke-width="1px" stroke="#ff862f" fill="transparent"></circle>
//     </svg>`;
//     if (document.querySelector(".timer")) {
//       document.querySelector(".timer").remove()
//     }
//     document.querySelector(".timer-active").insertAdjacentHTML("beforeend", timer)

//     const swiperSlideActive = document.querySelector(".hero-swiper__slide.swiper-slide-active");
//     if (!swiperSlideActive.nextElementSibling) {
//       document.querySelector(".hero-button-next").classList.add("timer-disabled")
//     }
//   },
//   slidePrevTransitionStart() {
//     const timer = `<svg class="timer" width="24" height="24" viewBox="0 0 24 24">
//     <circle cx="4" cy="12" r="10" transform="rotate(-90 8 8)"
//     stroke-width="1px" stroke="#ff862f" fill="transparent"></circle>
//     </svg>`;
//     if (document.querySelector(".timer")) {
//       document.querySelector(".timer").remove()
//     }
//     document.querySelector(".timer-active").insertAdjacentHTML("beforeend", timer)
//     const swiperSlideActive = document.querySelector(".hero-swiper__slide.swiper-slide-active");
//     if (swiperSlideActive.nextElementSibling) {
//       document.querySelector(".hero-button-next").classList.remove("timer-disabled")
//     }
//   },
//   afterInit() {
//     const timer = `<svg class="timer" width="24" height="24" viewBox="0 0 24 24">
//     <circle cx="4" cy="12" r="10" transform="rotate(-90 8 8)"
//     stroke-width="1px" stroke="#ff862f" fill="transparent"></circle>
//     </svg>`
//     document.querySelector(".timer-active").insertAdjacentHTML("beforeend", timer)
//   },
// }
// ===================================================================================================================================================

// Таймер цсс

// <div class="timer">
// <div class="timer__line"></div>

// <div class="timer__body">  <!-- Для счетчика -->

// </div>
// </div>

.timer {
  position: relative;
  width: 200px;
  height: 200px;
  border-radius: 50%;
  background-color: red;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;

  &::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 50%;
    height: 100%;
    z-index: 3;
    background-color: orangered;
    animation-name: line-mask-left;
    animation-duration: 10s;
    animation-timing-function: steps(1, end);
    animation-fill-mode: forwards;
  }

  &::after {
    content: "";
    position: absolute;
    top: 0;
    right: 0;
    width: 50%;
    height: 100%;
    z-index: 3;
    background-color: blue;
    animation-name: line-mask-right;
    animation-duration: 10s;
    animation-timing-function: steps(1, end);
    animation-fill-mode: forwards;
  }

  &__line {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    // background-color: orange;
    animation-name: animation-line;
    animation-duration: 10s;
    animation-timing-function: ease-in-out;
    animation-fill-mode: forwards;
    z-index: 2;

    &::after {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      width: 50%;
      height: 100%;
      background-color: blue;
    }
  }

  // Счетчик
  &__body {
    width: 100px;
    height: 100px;
    border-radius: 50%;
    text-align: center;
    background-color: #fff;
    overflow: hidden;
    position: relative;
    z-index: 4;
  }

  &__counter {
    animation-name: counter;
    animation-timing-function: steps(9, end);
    animation-duration: 10s;
    animation-fill-mode: forwards;

    & span {
      font-size: 40px;
      display: flex;
      align-items: center;
      justify-content: center;
      height: 100px;
    }
  }

  // Счетчик
}

// Счетчик
@keyframes counter {
  0% {}

  100% {
    transform: translate(0, -900px);
  }
}

// Счетчик

// Сам круг
@keyframes animation-line {
  0% {}

  100% {
    transform: rotate(360deg);
  }
}

// Сам круг
// Левая часть маски
@keyframes line-mask-left {
  0% {
    visibility: visible;
  }

  50% {
    visibility: hidden;
  }

  100% {
    visibility: hidden;
  }
}

// Левая часть маски
// Правая часть маски
@keyframes line-mask-right {
  0% {
    visibility: hidden;
  }

  50% {
    visibility: visible;
  }

  100% {
    visibility: visible;
  }
}

// Правая часть маски

// ===================================================================================================================================================

// Рипл, при нажатии появляется элемент и увеличивается, прикольно выглядит

// <button data-ripple class="btn" type="button"> // дата атрибут инициирует
// Btn
// </button>

.btn {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 10px;
  font-size: 20px;
  line-height: 1;
  font-weight: 400;
  color: #fff;
  width: 160px;
  height: 50px;
  overflow: hidden;
  letter-spacing: 1px;
  background-color: rgb(143, 10, 10);
  transition: background-color .2s ease-in-out;

  @media (any-hover: hover) {
    &:hover {
      background-color: rgb(206, 27, 27);
    }
  }

  &:active {

    transition-duration: .1s;
  }
}

.ripple {
  position: absolute;
  bottom: 0;
  right: 0;
  border-radius: 50%;
  background-color: rgba(255, 255, 255, .6);
  border: 1px solid #fff;
  animation-name: ripple-circle;
  animation-duration: 1s;
  animation-timing-function: ease-in-out;
}

@keyframes ripple-circle {
  0% {
    transform: scale(0);
  }

  100% {
    transform: scale(20);
    opacity: 0;
  }
}

// document.addEventListener("click", function (e) {
//   const targetItem = e.target;
//   if (targetItem.closest("[data-ripple]")) {

//     const button = targetItem.closest("[data-ripple]");
//     const ripple = document.createElement("span");
//     const diametr = Math.max(button.clientWidth, button.clientHeight);
//     const radius = diametr / 2;

//     ripple.style.width = ripple.style.height = `${diametr}px`;
//     ripple.style.left = `${e.pageX - (button.getBoundingClientRect().left + scrollX) - radius}px`;
//     ripple.style.top = `${e.pageY - (button.getBoundingClientRect().top + scrollY) - radius}px`;
//     ripple.classList.add("ripple");

//     button.appendChild(ripple);

//     const timeOut = getAnimationDuration(ripple);

//     setTimeout(() => {
//       ripple ? ripple.remove() : null;
//     }, timeOut);

//     function getAnimationDuration() {
//       const aDuration = window.getComputedStyle(ripple).animationDuration;
//       return aDuration.includes("ms") ? aDuration.replace("ms", "") : aDuration.replace("s", "") * 1000;
//     }
//   }
// })

// ===================================================================================================================================================

// Блик эффект

// .flare-button:after {
//   content: "";
//   display: block;
//   width: 20px;
//   height: 200px;
//   margin-left: 50px;
//   background: #fff;
//   background: -webkit-gradient(
//     linear,
//     left top,
//     left bottom,
//     from(rgba(255, 255, 255, 0.7)),
//     color-stop(50%, white),
//     to(rgba(255, 255, 255, 0.7))
//   );
//   background: linear-gradient(
//     to bottom,
//     rgba(255, 255, 255, 0.7) 0%,
//     white 50%,
//     rgba(255, 255, 255, 0.7) 100%
//   );
//   left: -40px;
//   top: -100px;
//   z-index: 1;
//   -webkit-transform: rotate(45deg);
//   transform: rotate(45deg);
//   position: absolute;
//   -webkit-animation: movingFlare 3s ease-in-out 0.05s infinite;
//   animation: movingFlare 3s ease-in-out 0.05s infinite;
// }

// @-webkit-keyframes movingFlare {
//   0% {
//     left: -30px;
//     margin-left: 0px;
//   }
//   30% {
//     left: 110%;
//     margin-left: 80px;
//   }
//   100% {
//     left: 110%;
//     margin-left: 80px;
//   }
// }

// @keyframes movingFlare {
//   0% {
//     left: -30px;
//     margin-left: 0px;
//   }
//   30% {
//     left: 110%;
//     margin-left: 80px;
//   }
//   100% {
//     left: 110%;
//     margin-left: 80px;
//   }
// }

// ===================================================================================================================================================

// Бесконечно движущийся блок (ticker slider)

.ticker {
  position: relative;
  overflow: hidden;
}

.ticker__wrapper {
  display: flex;
}

.ticker__item {
  font-size: 70px;
  font-weight: 700;
  white-space: nowrap;
  flex-shrink: 0;
  padding: 0 50px;
  animation-name: ticker;
  animation-timing-function: linear;
  animation-duration: 10s;
  animation-iteration-count: infinite;
}

@keyframes ticker {
  0% {
    transform: translateZ(0);
  }

  100% {
    transform: translate3d(-100%, 0, 0);
  }
}

// <div class="ticker">
//   <div class="ticker__wrapper">
//     <div class="ticker__item">
//       Ticker-animation
//     </div>
//     <div class="ticker__item">
//       Ticker-animation
//     </div>
//     <div class="ticker__item">
//       Ticker-animation
//     </div>
//     <div class="ticker__item">
//       Ticker-animation
//     </div>
//   </div>
// </div>

// ===================================================================================================================================================

// Рейтинг на цсс

.rating {
  position: relative;
  display: flex;
  flex-direction: row-reverse;
  padding: 30px 40px;
  border: 2px solid #000;
  width: fit-content;
  gap: 5px;
}

.rating__input {
  position: relative;
  width: 40px;
  height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
}

.rating__input::before {
  content: "\f005";
  font-family: fontAwesome;
  font-size: 34px;
  position: absolute;
  color: #000;
  transition-timing-function: linear;
  transition: .3s;
}

.rating__input:hover~input::before,
.rating__input:hover::before,
.rating__input:checked~input::before,
.rating__input:checked::before {
  color: red;
}

// Не забыть подключить

// <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.1/css/all.min.css" integrity="sha512-MV7K8+y+gLIBoVD59lQIYicR65iaqukzvf/nwasF0nqhPay5w/9lJmVM2hMDcnK1OnMGCdVK+iQrJ7lzPJQd1w==" crossorigin="anonymous" referrerpolicy="no-referrer" />

// <div class="rating">
// <input class="rating__input" type="radio" name="el1">
// <input class="rating__input" type="radio" name="el1">
// <input class="rating__input" type="radio" name="el1">
// <input class="rating__input" type="radio" name="el1">
// <input class="rating__input" type="radio" name="el1">
// <input class="rating__input" type="radio" name="el1">
// <input class="rating__input" type="radio" name="el1">
// <input class="rating__input" type="radio" name="el1">
// <input class="rating__input" type="radio" name="el1">
// <input class="rating__input" type="radio" name="el1">
// </div>

// Если с свг

.rating {
  position: relative;
  display: flex;
  padding: 0 20px;
  border: 2px solid #000;
  width: fit-content;
  gap: 5px;
  transform: rotate(180deg);
}

.rating__input {
  width: 25px;
  height: 23px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  position: relative;
  z-index: 2;
}

svg {
  position: absolute;
  stroke: #979797;
  z-index: 1;
  transform: rotate(35deg);
  transition: stroke .3s linear;
}

.one {
  top: 0;
  left: 20px;
}

.two {
  top: 0;
  left: 50px;
}

.free {
  top: 0;
  right: 50%;
  transform: translateX(50%) rotate(35deg);
}

.four {
  top: 0;
  right: 50px;
}

.five {
  top: 0;
  right: 20px;
}

.rating__input:hover~svg,
.rating__input:hover svg,
.rating__input:checked~svg,
.rating__input:checked svg {
  stroke: red;
}

// <div class="rating">
// <input class="rating__input" type="radio" name="el1">
// <svg class="one" width="25" height="23" viewBox="0 0 25 23" fill="none" xmlns="http://www.w3.org/2000/svg">
//   <path
//     d="M12.7327 18.3074L12.5 18.1851L12.2673 18.3074L5.81675 21.6987L7.0487 14.5159L7.09314 14.2568L6.9049 14.0733L1.68627 8.98641L8.89824 7.93845L9.15838 7.90065L9.27471 7.66493L12.5 1.12978L15.7253 7.66493L15.8416 7.90065L16.1018 7.93845L23.3137 8.98641L18.0951 14.0733L17.9069 14.2568L17.9513 14.5159L19.1833 21.6987L12.7327 18.3074Z" />
// </svg>
// <input class="rating__input" type="radio" name="el1">
// <svg class="two" width="25" height="23" viewBox="0 0 25 23" fill="none" xmlns="http://www.w3.org/2000/svg">
//   <path
//     d="M12.7327 18.3074L12.5 18.1851L12.2673 18.3074L5.81675 21.6987L7.0487 14.5159L7.09314 14.2568L6.9049 14.0733L1.68627 8.98641L8.89824 7.93845L9.15838 7.90065L9.27471 7.66493L12.5 1.12978L15.7253 7.66493L15.8416 7.90065L16.1018 7.93845L23.3137 8.98641L18.0951 14.0733L17.9069 14.2568L17.9513 14.5159L19.1833 21.6987L12.7327 18.3074Z" />
// </svg>
// <input class="rating__input" type="radio" name="el1">
// <svg class="free" width="25" height="23" viewBox="0 0 25 23" fill="none" xmlns="http://www.w3.org/2000/svg">
//   <path
//     d="M12.7327 18.3074L12.5 18.1851L12.2673 18.3074L5.81675 21.6987L7.0487 14.5159L7.09314 14.2568L6.9049 14.0733L1.68627 8.98641L8.89824 7.93845L9.15838 7.90065L9.27471 7.66493L12.5 1.12978L15.7253 7.66493L15.8416 7.90065L16.1018 7.93845L23.3137 8.98641L18.0951 14.0733L17.9069 14.2568L17.9513 14.5159L19.1833 21.6987L12.7327 18.3074Z" />
// </svg>
// <input class="rating__input" type="radio" name="el1">
// <svg class="four" width="25" height="23" viewBox="0 0 25 23" fill="none" xmlns="http://www.w3.org/2000/svg">
//   <path
//     d="M12.7327 18.3074L12.5 18.1851L12.2673 18.3074L5.81675 21.6987L7.0487 14.5159L7.09314 14.2568L6.9049 14.0733L1.68627 8.98641L8.89824 7.93845L9.15838 7.90065L9.27471 7.66493L12.5 1.12978L15.7253 7.66493L15.8416 7.90065L16.1018 7.93845L23.3137 8.98641L18.0951 14.0733L17.9069 14.2568L17.9513 14.5159L19.1833 21.6987L12.7327 18.3074Z" />
// </svg>
// <input class="rating__input" type="radio" name="el1">
// <svg class="five" width="25" height="23" viewBox="0 0 25 23" fill="none" xmlns="http://www.w3.org/2000/svg">
//   <path
//     d="M12.7327 18.3074L12.5 18.1851L12.2673 18.3074L5.81675 21.6987L7.0487 14.5159L7.09314 14.2568L6.9049 14.0733L1.68627 8.98641L8.89824 7.93845L9.15838 7.90065L9.27471 7.66493L12.5 1.12978L15.7253 7.66493L15.8416 7.90065L16.1018 7.93845L23.3137 8.98641L18.0951 14.0733L17.9069 14.2568L17.9513 14.5159L19.1833 21.6987L12.7327 18.3074Z" />
// </svg>
// </div>

// ===================================================================================================================================================